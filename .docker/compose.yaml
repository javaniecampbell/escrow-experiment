name: escrow-platform
services:
  dashboard:
    build:
      context: ../apps/dashboard
      dockerfile: Dockerfile
    container_name: escrow-dashboard
    ports:
      - "8000:3000"
    volumes:
      - ../apps/dashboard:/app
      - ../apps/dashboard/node_modules
      - ../apps/dashboard/.next
    environment:
      - NODE_ENV=${ENVIRONMENT_STAGE}
      - PORT=3000
    depends_on:
      # - api
      - payment-service
      # - notification-service
      # api:
      #   build:
      #     context: ../services/api
      #     dockerfile: Dockerfile
      #     target: ${ENVIRONMENT_STAGE}
      #   container_name: escrow-api
      #   ports:
      #     - "8003:3000"
      #   volumes:
      #     - ../apps/api:/app
      #     - ../apps/api/node_modules
      #   environment:
      #     - NODE_ENV=${ENVIRONMENT_STAGE}
      #     - PORT=3000
      #   depends_on:
      #     - database
  payment-service:
    build:
      context: ../services/payment-service
      dockerfile: Dockerfile
      target: dev
    container_name: escrow-payment-service
    ports:
      - "8001:3000"
    volumes:
      - ../apps/payment-service:/app
      - ../apps/payment-service/node_modules
    environment:
      - NODE_ENV=${ENVIRONMENT_STAGE}
      - AZURE_STORAGE_CONNECTION_STRING=${AZURE_STORAGE_CONNECTION_STRING}
      - AZURE_CONTAINER_NAME=${AZURE_CONTAINER_NAME}
      - PORT=3000
    depends_on:
      # - api
      - database
  # notification-service:
  #   build:
  #     context: ../services/notification-service
  #     dockerfile: Dockerfile
  #     target: ${ENVIRONMENT_STAGE}
  #   container_name: escrow-notification-service
  #   ports:
  #     - "8002:3000"
  #   volumes:
  #     - ../apps/notification-service:/app
  #     - ../apps/notification-service/node_modules
  #   environment:
  #     - NODE_ENV=${ENVIRONMENT_STAGE}
  #     - PORT=3000
  #   depends_on:
  #     # - api
  #     - database
  database:
    image: postgres:12.1-alpine
    container_name: escrow-database
    ports:
      - "5432:5432"
    volumes:
      - ../data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      # - POSTGRES_DB=escrow
  flyway:
    image: flyway/flyway:10.4-alpine
    container_name: migration-runner
    command: -connectRetries=60 migrate
    volumes:
      - ../.scripts/migrations:/flyway/sql
    environment:
      - FLYWAY_URL=jdbc:postgresql://database:5432/${DATABASE_NAME}
      - FLYWAY_USER=${DATABASE_USER}
      - FLYWAY_PASSWORD=${DATABASE_PASSWORD}
      - FLYWAY_SCHEMAS=${DATABASE_SCHEMA}
      - FLYWAY_LOCATIONS=filesystem:/flyway/sql
      - FLYWAY_TABLE=schema_version
    depends_on:
      - database
